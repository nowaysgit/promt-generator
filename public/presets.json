{
  "default": {
    "name": "Анализ проблем",
    "goal": "Заново проанализируй проект (все модули и файлы) для выявления:\n- Лишних/дублирующих файлов и архитектурных проблем  \n- Переусложненную структуру там где это не нужно (например фасады)\n- Нерабочий код\nДелай работу по кускам сначала проанализировав как можно больше. Если анализируешь модуль твоя задача пройдись по всем директориям и поддиректориям. В задачи на анализ добавь так-же задачу на анализ взаимодействия между модулями и сервисами.",
    "processType": "analysis",
    "progressConfig": "{\n  \"current_step\": 0,\n  \"completed\": [\n    \"Анализ модуля X: выявлены Y проблем\",\n    \"Обзор структуры директории Z\"\n  ],\n  \"pending\": [\n    \"Анализ модуля A\",\n    \"Проверка компонентов B\",\n    \"Обзор сервисов C\"\n  ],\n  \"problems\": [\n    \"Дублирование: InterfaceX и InterfaceY выполняют одинаковые функции\",\n    \"Избыточность: ServiceA содержит неиспользуемые методы\"\n  ]\n}",
    "progressHelperConfig": "{\n  \"project_structure\": {\n    \"directories\": {\n      \"path\": \"/корневая_директория\",\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"/поддиректория\",\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"/файл.расширение\",\n              \"type\": \"file\",\n              \"description\": \"Краткое назначение/описание\",\n              \"exports\": [\"список\", \"экспортируемых\", \"сущностей\"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"key_services\": [\n    {\n      \"name\": \"НазваниеСервиса\",\n      \"path\": \"/полный/путь/к/файлу\",\n      \"description\": \"Краткое назначение\",\n      \"used_in\": [\"МодульА\", \"МодульБ\"]\n    }\n  ],\n  \"architectural_links\": [\n    {\n      \"source\": \"МодульА\",\n      \"target\": \"СервисБ\",\n      \"direction\": \"МодульА → СервисБ\",\n      \"description\": \"Тип взаимодействия\"\n    }\n  ],\n  \"file_registry\": {\n    \"potential_duplicates\": {\n      \"filename.ext\": [\"/путь/версия1\", \"/путь/версия2\"]\n    }\n  },\n  \"module_hierarchy\": {\n    \"МодульА\": {\n      \"path\": \"/путь/к/модулю\",\n      \"components\": [\"Компонент1\", \"Компонент2\"],\n      \"services\": [\"Сервис1\", \"Сервис2\"]\n    }\n  }\n}",
    "progressHelperRules": "Добавляй/обновляй данные при каждом шаге анализа\nСтарайся использовать информацию из прочитанных файлов по максимуму, например заполнить architectural_links и key_services.\nСохраняй ТОЛЬКО структурные данные (без проблем/аналитики/статусов)\nЕсли еще нет информации по файлу, части системы или архитектурной ссылки, которую ты обнаружил в процессе, добавь.",
    "finalizationConfig": "После анализа всех задач:\nПроанализировать файл `.progress`, отсортировать и сгруппировать проблемы из раздела `problems` в оптимальном порядке для решения. Результат разместить в `pending`, после чего очистить `problems` и `completed`, `current_step` прировнять к 0. Использовать данные из `.progress.helper` для возможного объединения/корректировки формулировок проблем, а так же для выявления других проблем.",
    "customProcess": "",
    "rules": [
      {
        "id": "rule1",
        "text": "Никаких объяснений/тестов/миграций.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule2",
        "text": "Запрещено добавлять внешние интеграции.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule4",
        "text": "Избегай чрезмерной фрагментации, файлы могут быть большими.",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule3",
        "text": "только анализируй и ищи проблемы, НЕ решай их",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule5",
        "text": "Сохранить оригинальную JSON-структуру файлов .progress и .progress.helper",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule6",
        "text": "основная цель анализ как можно большего количества файлов",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule8",
        "text": "В фокусе: избыточные файлы, дубли сервисов, неиспользуемый код, нерабочий код.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule9",
        "text": "Используй .progress.helper как контекст для анализа связей и системы.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule101",
        "text": "Соблюдай SOLID, но не впадай в крайности и не начинай использовать антипаттерны SOLID.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule105",
        "text": "Цикл должен выполняться бесконечно пока есть задачи в `pending`",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749344173183",
        "text": "Файлы до 700 строк не могут считаться большими",
        "type": "forbidden",
        "important": false,
        "checked": true
      }
    ]
  },
  "fixing": {
    "name": "Исправление проблем",
    "goal": "Последовательно исправлять проблемы проекта, используя файл прогресса `.progress` и шпаргалку `.progress.helper`.  Исправляй текущую проблему до тех пор, пока она не будет полностью исправлена. Важно расширять и актуализировать файл `.progress.helper`.",
    "processType": "fixing",
    "progressConfig": "{\n  \"current_step\": 0,\n  \"completed\": [\n    \"Анализ модуля X: выявлены Y проблем\",\n    \"Обзор структуры директории Z\"\n  ],\n  \"pending\": [\n    \"Анализ модуля A\",\n    \"Проверка компонентов B\",\n    \"Обзор сервисов C\"\n  ],\n  \"problems\": [\n    \"Дублирование: InterfaceX и InterfaceY выполняют одинаковые функции\",\n    \"Избыточность: ServiceA содержит неиспользуемые методы\"\n  ]\n}",
    "progressHelperConfig": "{\n  \"project_structure\": {\n    \"directories\": {\n      \"path\": \"/корневая_директория\",\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"/поддиректория\",\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"/файл.расширение\",\n              \"type\": \"file\",\n              \"description\": \"Краткое назначение/описание\",\n              \"exports\": [\"список\", \"экспортируемых\", \"сущностей\"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"key_services\": [\n    {\n      \"name\": \"НазваниеСервиса\",\n      \"path\": \"/полный/путь/к/файлу\",\n      \"description\": \"Краткое назначение\",\n      \"used_in\": [\"МодульА\", \"МодульБ\"]\n    }\n  ],\n  \"architectural_links\": [\n    {\n      \"source\": \"МодульА\",\n      \"target\": \"СервисБ\",\n      \"direction\": \"МодульА → СервисБ\",\n      \"description\": \"Тип взаимодействия\"\n    }\n  ],\n  \"file_registry\": {\n    \"potential_duplicates\": {\n      \"filename.ext\": [\"/путь/версия1\", \"/путь/версия2\"]\n    }\n  },\n  \"module_hierarchy\": {\n    \"МодульА\": {\n      \"path\": \"/путь/к/модулю\",\n      \"components\": [\"Компонент1\", \"Компонент2\"],\n      \"services\": [\"Сервис1\", \"Сервис2\"]\n    }\n  }\n}",
    "progressHelperRules": "Добавляй/обновляй данные при каждом исправлении\nДобавляй/обновляй информацию на основе внесенных изменений\nСохраняй ТОЛЬКО структурные данные (без проблем/аналитики/статусов)\nЕсли еще нет информации по файлу, части системы или архитектурной ссылки, которую ты обнаружил в процессе, добавь.",
    "finalizationConfig": "После исправления всех проблем:\nОбнови файл .progress.helper\nОбнови файл .progress",
    "customProcess": "",
    "rules": [
      {
        "id": "rule2",
        "text": "Запрещены любые побочные действия: объяснения, тесты, документация, миграции",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule3",
        "text": "Запрещено добавлять интеграции с внешними сервисами",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule4",
        "text": "Избегай чрезмерной фрагментации, файлы могут быть большими.",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1",
        "text": "Прекрати выполнение и сообщи об ошибке если файл `.progress` не существует",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule6",
        "text": "Сохранить оригинальную JSON-структуру файлов `.progress` и `.progress.helper`",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule5",
        "text": "Все изменения должны фиксироваться через обновление `.progress`, файл `.progress.helper` нужно расширять и актуализировать ",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule7",
        "text": "Цикл должен выполняться бесконечно пока есть задачи в `pending`",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule8",
        "text": "Основной фокус: устранение избыточных элементов (файлы, сервисы, методы)",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule9",
        "text": "Используй `.progress.helper` как контекст для анализа связей и системы.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule103",
        "text": "Соблюдай SOLID, но не впадай в крайности и не начинай использовать антипаттерны SOLID.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749343295486",
        "text": "Если была добавлена новая часть, например новый сервис вместо старого, добавь новую следующую задачу в пендинг на внедрение нового сервиса во всю систему вместо старого.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749343976573",
        "text": "Если планируешь заменить что-то (например сервис или метод), обязательно перед этим добавь задачу в пендинг на внедрение этих изменений во всю систему.",
        "type": "allowed",
        "important": true,
        "checked": true
      }
    ]
  },
  "test_analysis": {
    "name": "Тесты анализ",
    "goal": "Полностью проанализировать проект (все модули и файлы) для выявления функционала без тестового покрытия. Делай работу по кускам сначала проанализировав как можно больше. Если анализируешь модуль твоя задача пройдись по всем директориям и поддиректориям.",
    "processType": "analysis",
    "progressConfig": "{\n  \"current_step\": 0,\n  \"completed\": [\n    \"Анализ модуля X: выявлены Y проблем\",\n    \"Обзор структуры директории Z\"\n  ],\n  \"pending\": [\n    \"Анализ модуля A\",\n    \"Проверка компонентов B\",\n    \"Обзор сервисов C\"\n  ],\n  \"problems\": [\n    \"Дублирование: InterfaceX и InterfaceY выполняют одинаковые функции\",\n    \"Избыточность: ServiceA содержит неиспользуемые методы\"\n  ]\n}",
    "progressHelperConfig": "{\n  \"project_structure\": {\n    \"directories\": {\n      \"path\": \"/корневая_директория\",\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"/поддиректория\",\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"/файл.расширение\",\n              \"type\": \"file\",\n              \"description\": \"Краткое назначение/описание\",\n              \"exports\": [\"список\", \"экспортируемых\", \"сущностей\"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"key_services\": [\n    {\n      \"name\": \"НазваниеСервиса\",\n      \"path\": \"/полный/путь/к/файлу\",\n      \"description\": \"Краткое назначение\",\n      \"used_in\": [\"МодульА\", \"МодульБ\"]\n    }\n  ],\n  \"architectural_links\": [\n    {\n      \"source\": \"МодульА\",\n      \"target\": \"СервисБ\",\n      \"direction\": \"МодульА → СервисБ\",\n      \"description\": \"Тип взаимодействия\"\n    }\n  ],\n  \"file_registry\": {\n    \"potential_duplicates\": {\n      \"filename.ext\": [\"/путь/версия1\", \"/путь/версия2\"]\n    }\n  },\n  \"module_hierarchy\": {\n    \"МодульА\": {\n      \"path\": \"/путь/к/модулю\",\n      \"components\": [\"Компонент1\", \"Компонент2\"],\n      \"services\": [\"Сервис1\", \"Сервис2\"]\n    }\n  }\n}",
    "progressHelperRules": "Добавляй/обновляй данные при каждом шаге анализа\nСтарайся использовать информацию из прочитанных файлов по максимуму, например заполнить architectural_links и key_services.\nСохраняй ТОЛЬКО структурные данные (без проблем/аналитики/статусов)\nЕсли еще нет информации по файлу, части системы или архитектурной ссылки, которую ты обнаружил в процессе, добавь.",
    "finalizationConfig": "После анализа всех задач:\nПроанализировать файл `.progress`, отсортировать и сгруппировать проблемы из раздела `problems` в оптимальном порядке для решения. Результат разместить в `pending`, после чего очистить `problems` и `completed`, `current_step` прировнять к 0. Использовать данные из `.progress.helper` для возможного объединения/корректировки формулировок проблем, а так же для выявления других проблем.",
    "customProcess": "",
    "rules": [
      {
        "id": "rule1",
        "text": "Никаких объяснений/тестов/миграций.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule2",
        "text": "Запрещено добавлять внешние интеграции.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule3",
        "text": "только анализируй и ищи места для тестов, НЕ решай проблемы и не пиши тесты",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule4",
        "text": "Сохранить оригинальную JSON-структуру файлов .progress и .progress.helper",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule5",
        "text": "основная цель анализ как можно большего количества файлов",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule6",
        "text": "Все изменения ТОЛЬКО через обновление .progress и .progress.helper",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule7",
        "text": "В фокусе: основная бизнес логика",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule8",
        "text": "Используй .progress.helper как контекст для анализа связей",
        "type": "allowed",
        "important": false,
        "checked": true
      }
    ]
  },
  "test_writing": {
    "name": "Тесты написание",
    "goal": "Последовательно покрыть интеграционными тестами весь проект, используя файл прогресса `.progress` и шпаргалку `.progress.helper`. Исправляй текущую проблему до тех пор, пока она не будет полностью исправлена. Важно расширять и актуализировать файл `.progress.helper`. Избегай чрезмерной фрагментации, файлы могут быть большими. Если для работы теста нужно исправить логику приложения добавь необходимые задачи в `pending`. Основная цель сделать приложение рабочим.\n\nТребования к тестам:\n- Используй абстракцию над Jest из <корень проекта>/lib/tester:\n- Расширяй её только при необходимости\n- Сохраняй лаконичность тестовых файлов\n- Каждый тест оформляй как вызов функции с параметрами (включая коллбеки)\n- Реализуй строгий и понятный интерфейс тестирования\n- Перед каждым тестом:\n  Полностью очищай тестовую БД\n  Заполняй фикстурами через коллбек в параметрах теста\n\nНапиши docker-compose для тестового окружения (БД и др.)\nРеализуй режим теста в приложении:\nАвтоматическое подключение к тестовой БД\nИспользование тестового env",
    "processType": "fixing",
    "progressConfig": "{\n  \"current_step\": 0,\n  \"completed\": [\n    \"Анализ модуля X: выявлены Y проблем\",\n    \"Обзор структуры директории Z\"\n  ],\n  \"pending\": [\n    \"Анализ модуля A\",\n    \"Проверка компонентов B\",\n    \"Обзор сервисов C\"\n  ],\n  \"problems\": [\n    \"Дублирование: InterfaceX и InterfaceY выполняют одинаковые функции\",\n    \"Избыточность: ServiceA содержит неиспользуемые методы\"\n  ]\n}",
    "progressHelperConfig": "{\n  \"project_structure\": {\n    \"directories\": {\n      \"path\": \"/корневая_директория\",\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"/поддиректория\",\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"/файл.расширение\",\n              \"type\": \"file\",\n              \"description\": \"Краткое назначение/описание\",\n              \"exports\": [\"список\", \"экспортируемых\", \"сущностей\"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"key_services\": [\n    {\n      \"name\": \"НазваниеСервиса\",\n      \"path\": \"/полный/путь/к/файлу\",\n      \"description\": \"Краткое назначение\",\n      \"used_in\": [\"МодульА\", \"МодульБ\"]\n    }\n  ],\n  \"architectural_links\": [\n    {\n      \"source\": \"МодульА\",\n      \"target\": \"СервисБ\",\n      \"direction\": \"МодульА → СервисБ\",\n      \"description\": \"Тип взаимодействия\"\n    }\n  ],\n  \"file_registry\": {\n    \"potential_duplicates\": {\n      \"filename.ext\": [\"/путь/версия1\", \"/путь/версия2\"]\n    }\n  },\n  \"module_hierarchy\": {\n    \"МодульА\": {\n      \"path\": \"/путь/к/модулю\",\n      \"components\": [\"Компонент1\", \"Компонент2\"],\n      \"services\": [\"Сервис1\", \"Сервис2\"]\n    }\n  }\n}",
    "progressHelperRules": "Добавляй/обновляй данные при каждом исправлении\nДобавляй/обновляй информацию на основе внесенных изменений\nСохраняй ТОЛЬКО структурные данные (без проблем/аналитики/статусов)\nЕсли еще нет информации по файлу, части системы или архитектурной ссылки, которую ты обнаружил в процессе, добавь.",
    "finalizationConfig": "После исправления всех проблем:\nОбнови файл .progress.helper\nОбнови файл .progress",
    "customProcess": "Требования к тестам:\n- Используй абстракцию над Jest из <корень проекта>/lib/tester\n- Расширяй её только при необходимости\n- Сохраняй лаконичность тестовых файлов\n- Каждый тест оформляй как вызов функции с параметрами (включая коллбеки)\n- Реализуй строгий и понятный интерфейс тестирования\n\nПеред каждым тестом:\n- Полностью очищай тестовую БД\n- Заполняй фикстурами через коллбек в параметрах теста\n- Напиши docker-compose для тестового окружения (БД и др.)\n- Реализуй режим теста в приложении: автоматическое подключение к тестовой БД, использование тестового env",
    "rules": [
      {
        "id": "rule1",
        "text": "Никаких объяснений/миграций.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule2",
        "text": "Запрещено добавлять внешние интеграции.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule3",
        "text": "Сохранить оригинальную JSON-структуру файлов .progress и .progress.helper",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule4",
        "text": "Тесты должны использовать только нашу абстракцию",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule5",
        "text": "В фокусе: основная бизнес логика",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule6",
        "text": "Используй .progress.helper как контекст для анализа связей",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749343739846",
        "text": "Если была добавлена новая часть, например новый сервис вместо старого, добавь новую следующую задачу в пендинг на внедрение нового сервиса во всю систему вместо старого.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749343863404",
        "text": "Соблюдай SOLID, но не впадай в крайности и не начинай использовать антипаттерны SOLID.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749344701901",
        "text": "Если планируешь заменить что-то (например сервис или метод), обязательно перед этим добавь задачу в пендинг на внедрение этих изменений во всю систему.",
        "type": "allowed",
        "important": true,
        "checked": true
      }
    ]
  },
  "custom": {
    "name": "Бесконечно анализировать и исправлять",
    "goal": "Бесконечно исправлять проект (ошибки импортов, типов и т.д.), перед началом исправления добавить задачу в пендинг. Если задача не исправлена полностью, добавить еще одну в пендинг. Если задачи закончились начинай искать проблемы дальше.",
    "processType": "fixing",
    "progressConfig": "{\n  \"current_step\": 0,\n  \"completed\": [],\n  \"pending\": [],\n  \"problems\": []\n}",
    "progressHelperConfig": "{\n  \"project_structure\": {\n    \"directories\": {\n      \"path\": \"/корневая_директория\",\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"/поддиректория\",\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"/файл.расширение\",\n              \"type\": \"file\",\n              \"description\": \"Краткое назначение/описание\",\n              \"exports\": [\"список\", \"экспортируемых\", \"сущностей\"]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"key_services\": [\n    {\n      \"name\": \"НазваниеСервиса\",\n      \"path\": \"/полный/путь/к/файлу\",\n      \"description\": \"Краткое назначение\",\n      \"used_in\": [\"МодульА\", \"МодульБ\"]\n    }\n  ],\n  \"architectural_links\": [\n    {\n      \"source\": \"МодульА\",\n      \"target\": \"СервисБ\",\n      \"direction\": \"МодульА → СервисБ\",\n      \"description\": \"Тип взаимодействия\"\n    }\n  ],\n  \"file_registry\": {\n    \"potential_duplicates\": {\n      \"filename.ext\": [\"/путь/версия1\", \"/путь/версия2\"]\n    }\n  },\n  \"module_hierarchy\": {\n    \"МодульА\": {\n      \"path\": \"/путь/к/модулю\",\n      \"components\": [\"Компонент1\", \"Компонент2\"],\n      \"services\": [\"Сервис1\", \"Сервис2\"]\n    }\n  }\n}",
    "progressHelperRules": "Добавляй/обновляй данные при каждом исправлении\nДобавляй/обновляй информацию на основе внесенных изменений\nСохраняй ТОЛЬКО структурные данные (без проблем/аналитики/статусов)\nЕсли еще нет информации по файлу, части системы или архитектурной ссылки, которую ты обнаружил в процессе, добавь.\n",
    "finalizationConfig": "Если задачи закончились нужно искать проблемы дальше, с фокусом на то что мешает работе приложения.",
    "customProcess": "",
    "rules": [
      {
        "id": "rule1749347513837",
        "text": "Никаких объяснений/тестов/миграций.",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749347526751",
        "text": "Запрещено добавлять внешние интеграции.",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347540993",
        "text": "Избегай чрезмерной фрагментации, файлы могут быть большими.",
        "type": "forbidden",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749347565806",
        "text": "Файлы до 700 строк не могут считаться большими",
        "type": "forbidden",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347584050",
        "text": "В фокусе: избыточные файлы, дубли сервисов, неиспользуемый код, нерабочий код.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347603766",
        "text": "Используй .progress.helper как контекст для анализа связей и системы.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347615914",
        "text": "Соблюдай SOLID, но не впадай в крайности и НЕ начинай использовать антипаттерны SOLID.",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347636890",
        "text": "Цикл должен выполняться бесконечно пока есть задачи в `pending`",
        "type": "allowed",
        "important": false,
        "checked": true
      },
      {
        "id": "rule1749347684464",
        "text": "Если была добавлена новая часть, например новый сервис вместо старого, добавь новую следующую задачу в пендинг на внедрение нового сервиса во всю систему вместо старого.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749347699742",
        "text": "Если планируешь заменить что-то (например сервис или метод), обязательно перед этим добавь задачу в пендинг на внедрение этих изменений во всю систему.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749349304295",
        "text": "При проблеме вида \"несуществующие сервисы\" или \"несуществующие методы\", не спеши создавать их, сначала много раз попытайся найти аналог, в том числе в других модулях.",
        "type": "allowed",
        "important": true,
        "checked": true
      },
      {
        "id": "rule1749349820652",
        "text": "Если удаляешь что-то не используемое, проверь возможно это стоит заменить/удалить везде, добавь задачу в пендинг если это так.",
        "type": "allowed",
        "important": true,
        "checked": true
      }
    ]
  }
}